<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

       <context:property-placeholder location="classpath:server.properties"/>

       <context:component-scan base-package="com.familyan.smarth.manager.controllers"/>

       <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManager" >
              <constructor-arg name="strategies" >
                     <list>
                            <bean class="org.springframework.web.accept.HeaderContentNegotiationStrategy"/>
                     </list>
              </constructor-arg>
       </bean>

       <mvc:annotation-driven validator="validator" content-negotiation-manager="contentNegotiationManager">
              <mvc:argument-resolvers>
                     <!-- 只要在Method 中声明LoginMember 对象，框架自动注入,但有可能为null -->
                     <bean class="com.lotus.core.web.cookyjar.CookyjarValueArgumentResolver">
                            <property name="clazz" value="com.familyan.smarth.manager.domain.LoginEmployee" />
                     </bean>
                     <!-- 只要在method声明Cookyjar对象,则自动注入 -->
                     <bean class="com.lotus.core.web.cookyjar.CookjarArgumentResolver"/>
              </mvc:argument-resolvers>
       </mvc:annotation-driven>

       <!-- view -->
       <bean id="velocityConfigurer"
             class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
              <property name="resourceLoaderPath" value="WEB-INF/views/" />
              <property name="velocityProperties">
                     <map>
                            <entry key="input.encoding" value="${web.encoding}" />
                            <entry key="output.encoding" value="${web.encoding}" />
                            <entry key="velocimacro.library" value="macro.vm"/>
                            <entry key="velocimacro.library.autoreload" value="true" />
                     </map>
              </property>
              <property name="configLocation" value="classpath:velocity.properties" />
       </bean>

       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
              <property name="maxUploadSize" value="${fileupload.maxsize}"/>
              <!-- <property name="resolveLazily" value="true"/> -->
       </bean>

       <bean id="viewResolver"
             class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
              <property name="order" value="10" />
              <property name="suffix" value=".vm" />
              <property name="exposeSpringMacroHelpers" value="true" />
              <property name="toolboxConfigLocation" value="WEB-INF/tools/vm-toolbox.xml" />
              <property name="dateToolAttribute" value="dateTool" />
              <property name="numberToolAttribute" value="numberTool" />
              <property name="contentType" value="${web.contentType}" />
              <property name="exposeRequestAttributes" value="true" />
              <property name="viewClass" value="org.springframework.web.servlet.view.velocity.VelocityToolboxView" />
              <property name="attributesMap">
                     <map>
                            <entry key="appDomain" value="${app.domain}" />
                            <entry key="topDomain" value="${top.domain}"/>
                     </map>
              </property>
       </bean>

       <bean id="lastHandlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
              <property name="order" value="999" />
              <property name="defaultHandler">
                     <!-- 没有Controller 方法时，直接去找对应的模板 -->
                     <bean class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
              </property>
       </bean>
       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
              <property name="order" value="100" />
              <property name="prefix" value="/WEB-INF/views/" />
              <property name="suffix" value=".vm" />
       </bean>


       <!-- 自动验证的实现 -->
       <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
              <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
              <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
              <property name="validationMessageSource" ref="messageSource" />
       </bean>
       <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
              <property name="basenames">
                     <list>
                            <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
                            <value>classpath:message/message</value>
                            <value>classpath:org/hibernate/validator/ValidationMessages</value>
                     </list>
              </property>
              <property name="cacheSeconds" value="60" />
              <!-- 这个配置有可能错误, 看IDE，IDEA 在windwos 下默认GBK -->
              <property name="defaultEncoding" value="UTF-8" />
       </bean>

       <mvc:interceptors >
              <bean class="com.lotus.core.web.control.ControlHandlerInterceptor" />
              <!-- 后台账号登录验证  -->
              <bean class="com.familyan.smarth.manager.security.TckManagerLoginInterceptor" >
                     <property name="clazz" value="com.familyan.smarth.manager.domain.LoginEmployee" />
                     <property name="exposeToAttr" value="true" />
              </bean>
       </mvc:interceptors>

       <!-- exception security -->
       <bean class="com.familyan.smarth.manager.security.DWZSecurityExceptionResolver">
              <property name="webEncoding" value="${web.encoding}" />
              <property name="order" value="1" />
              <property name="loginPath" value="${login.url}" />
              <property name="noPermissionPath" value="${permission.url}" />
              <property name="returnUrlName" value="url" />
       </bean>
       <bean class="org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver">
              <property name="order" value="100"/>
       </bean>
       <bean class="com.lotus.core.web.exception.PrintStackExceptionResolver">
              <property name="order" value="200"/>
              <property name="defaultStatusCode" value="500" />
              <property name="defaultErrorView" value="error"/>
              <property name="showStack" value="${exception.show}" />
              <property name="stackAttributeName" value="stack" />
       </bean>
</beans>